#!/usr/bin/env python3
# -*- coding: utf-8 -*-
# Author : Enki
# Time : 2023/2/26 16:25
import csv
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from matplotlib.pyplot import MultipleLocator

# true = pd.read_csv("datasetTrue.csv", usecols=[0], decimal=' ')
# pre = pd.read_csv("datasetPre.csv", usecols=[0], decimal=' ')
pre = [1.333686115526264437e+01, 1.352325039060955447e+01, 1.337725015990743316e+01, 1.276533723290216749e+01,
       1.199601118291664648e+01, 1.119084123503230366e+01,
       1.032404178963015084e+01, 9.624627706796712090e+00, 9.030364360531658363e+00, 8.325240811955945119e+00,
       7.621051377632070967e+00, 6.822136084848879456e+00, 2.663822391977770820e+00,
       2.771925847541334420e+00, 2.925981322736461276e+00, 3.083721015803467136e+00, 3.288971900617554844e+00,
       3.523417517070423166e+00, 3.725508538109388645e+00, 3.906881910570484173e+00,
       4.078218952365070038e+00, 4.262831226715211308e+00, 4.483757173732980661e+00, 4.755734306571576475e+00,
       3.976456588044436025e+00, 3.637004874016758649e+00, 3.899933501632708577e+00,
       3.741789634676553788e+00, 3.643204119399078067e+00, 3.689201735039055130e+00, 3.657293135018705676e+00,
       3.612506833204895074e+00, 3.903048373320059383e+00, 4.486429673550624386e+00,
       4.682811379827475307e+00, 4.710545869100779548e+00, 6.961487149290956467e+00, 6.855901287900557861e+00,
       6.765510371804056788e+00, 6.878434925846631742e+00, 6.992875471678877908e+00,
       7.073748145528970355e+00, 7.143151007580489598e+00, 7.205968869940095445e+00, 7.287603691639432668e+00,
       7.514146100620726187e+00, 7.929217737741158345e+00, 8.564660620770380817e+00,

       3.574561895395200750e+00, 3.465547274564166891e+00, 3.143885250865470216e+00, 2.784710092615565014e+00,
       2.548051107012554883e+00, 2.403746383510714679e+00, 2.324590203103184205e+00, 2.290006687582626821e+00,
       2.281378171420922918e+00, 2.284470849024708539e+00, 2.289355057210729960e+00, 2.292836055786831917e+00,
       7.843558310520957200e-01,
       8.228198386529350650e-01, 8.095646864586989455e-01, 8.253544935842151986e-01, 8.643565944763993425e-01,
       9.166464592774461462e-01,
       9.576750158813067682e-01, 9.781992588738184224e-01, 9.834062626425816855e-01, 9.653677570094110205e-01,
       9.747514759329842793e-01, 9.705937842783733949e-01,
       8.358020114560801517e+00, 8.331669245221615228e+00, 7.576679516358311162e+00,
       7.351278970329438778e+00, 6.957912241055141500e+00, 7.095634229567474804e+00, 7.189173987887397033e+00,
       7.637103890236527803e+00, 8.531207946650544827e+00, 8.386881180045300255e+00, 8.352652467901469535e+00,
       8.345114330457521490e+00, 6.366784979189962890e+00,
       6.177199116398896628e+00, 5.772372540016604603e+00, 5.368069978025708622e+00, 4.863798129843058149e+00,
       4.478356160458219826e+00, 4.130997313474798815e+00,
       3.837381213375085309e+00, 3.630042725884393917e+00, 3.465092673301474413e+00, 3.345072957605301767e+00,
       3.253301176962606789e+00
       ]

true = [1.410000003827867232e+01, 1.430000043703782708e+01, 1.410000003827867232e+01, 1.350000004984248925e+01,
        1.239999966842905899e+01, 1.140000009031584938e+01, 1.029999970890241912e+01,
        9.400000028208467029e+00, 8.500000347514513166e+00, 7.599999458979276312e+00, 6.700000231225804903e+00,
        5.800000399551691110e+00, 2.699999805050719015e+00,
        2.900000052829713848e+00, 2.999999799268810108e+00, 3.200000047047804941e+00, 3.500000343226217225e+00,
        3.700000138064730493e+00, 3.900000234863565396e+00,
        4.200000002611416150e+00, 4.500000223299748470e+00, 4.800000481733119884e+00, 5.000000201081553186e+00,
        5.300000450078665715e+00, 3.500000343226217225e+00, 4.900000096064576205e+00,
        4.800000481733119884e+00, 4.300000503951314279e+00, 4.000000358753061924e+00, 3.700000138064730493e+00,
        3.400000294826799774e+00, 3.099999696688067186e+00, 3.099999696688067186e+00,
        4.500000223299748470e+00, 4.400000174900331018e+00, 4.800000481733119884e+00, 6.700000231225804903e+00,
        7.100000122863152185e+00, 7.500000316460821992e+00, 7.000000074463735622e+00,
        6.600000182826387451e+00, 6.500000134426970000e+00, 6.600000182826387451e+00, 6.900000479004798848e+00,
        7.300000219661987089e+00, 7.800000461659074347e+00, 8.299999948755356627e+00,
        8.899999635231221617e+00,

        3.400000294826799774e+00, 3.200000047047804941e+00, 2.900000052829713848e+00, 2.799999853450136023e+00,
        2.799999853450136023e+00, 2.799999853450136023e+00, 2.699999805050719015e+00, 2.699999805050719015e+00,
        2.699999805050719015e+00, 2.699999805050719015e+00, 2.799999853450136023e+00, 2.900000052829713848e+00,
        7.999997913427538965e-01, 6.999998939234968187e-01, 6.999998939234968187e-01, 6.999998939234968187e-01,
        7.999997913427538965e-01, 8.999999907223310558e-01, 9.999998881415881335e-01,
        1.200000286900742896e+00, 1.200000286900742896e+00, 1.200000286900742896e+00, 1.200000286900742896e+00,
        1.200000286900742896e+00, 9.199999931409632126e+00, 8.800000643692925451e+00,
        7.500000316460821992e+00, 7.300000219661987089e+00, 6.000000118900125301e+00, 6.900000479004798848e+00,
        6.700000231225804903e+00, 7.200000171262569637e+00, 7.999999954537267755e+00,
        7.599999458979276312e+00, 7.800000461659074347e+00, 8.400000148134935785e+00, 5.699999822721712128e+00,
        5.100000277789750847e+00, 4.599999856503725226e+00, 4.300000503951314279e+00,
        4.099999954211998698e+00, 3.900000234863565396e+00, 3.700000138064730493e+00, 3.500000343226217225e+00,
        3.299999793486902533e+00, 3.200000047047804941e+00, 3.099999696688067186e+00,
        3.099999696688067186e+00
        ]

# xg = pd.read_csv("xgb.csv")
# xg = np.array(xg)
# xg = xg[-48:]
# print(true)
# true = np.array(true)
# pre = np.array(pre)

plt.rcParams['savefig.dpi'] = 300  # 图片像素
plt.rcParams['figure.dpi'] = 300  # 分辨率
plt.figure(1)
color = {0: 'red', 1: 'orange', 2: 'green', 3: "yellow", 4: "blue"}
plt.plot(true[:], c=color[2], label='true', alpha=0.3)  # 原始数据
plt.plot(pre[:], c=color[2], label='pre')  # 原始数据
# plt.plot(xg[:], c=color[0], label='xg')  # 原始数据
plt.ylabel('DO mg/l')
plt.xlabel('time step')
plt.legend()
plt.tight_layout()  # 去掉图形两边空白
plt.show()
